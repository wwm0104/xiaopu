<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinaxiaopu.xiaopuMobi.mapper.PkChannelMapper">
    <resultMap id="BaseResultMap" type="com.chinaxiaopu.xiaopuMobi.model.PkChannel">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="slogan" jdbcType="VARCHAR" property="slogan"/>
        <result column="desc" jdbcType="VARCHAR" property="desc"/>
        <result column="poster_img" jdbcType="VARCHAR" property="posterImg"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="create_id" jdbcType="INTEGER" property="createId"/>
        <result column="create_realname" jdbcType="VARCHAR" property="createRealname"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="is_official" jdbcType="TINYINT" property="isOfficial"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, `name`, slogan, `desc`, poster_img, `type`, create_id, create_realname, status, is_official
  </sql>
    <select id="selectByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.PkChannelExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from pk_channel
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from pk_channel
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pk_channel
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.PkChannelExample">
        delete from pk_channel
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.chinaxiaopu.xiaopuMobi.model.PkChannel">
    insert into pk_channel (id, `name`, slogan,
      `desc`, poster_img, `type`,
      create_id, create_realname, status, 
      is_official)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{slogan,jdbcType=VARCHAR}, 
      #{desc,jdbcType=VARCHAR}, #{posterImg,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, 
      #{createId,jdbcType=INTEGER}, #{createRealname,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{isOfficial,jdbcType=TINYINT})
  </insert>
    <insert id="insertSelective" parameterType="com.chinaxiaopu.xiaopuMobi.model.PkChannel" useGeneratedKeys="true" keyProperty="id">
        insert into pk_channel
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="slogan != null">
                slogan,
            </if>
            <if test="desc != null">
                `desc`,
            </if>
            <if test="posterImg != null">
                poster_img,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="createId != null">
                create_id,
            </if>
            <if test="createRealname != null">
                create_realname,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="isOfficial != null">
                is_official,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="slogan != null">
                #{slogan,jdbcType=VARCHAR},
            </if>
            <if test="desc != null">
                #{desc,jdbcType=VARCHAR},
            </if>
            <if test="posterImg != null">
                #{posterImg,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="createId != null">
                #{createId,jdbcType=INTEGER},
            </if>
            <if test="createRealname != null">
                #{createRealname,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="isOfficial != null">
                #{isOfficial,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.PkChannelExample"
            resultType="java.lang.Long">
        select count(*) from pk_channel
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update pk_channel
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                `name` = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.slogan != null">
                slogan = #{record.slogan,jdbcType=VARCHAR},
            </if>
            <if test="record.desc != null">
                `desc` = #{record.desc,jdbcType=VARCHAR},
            </if>
            <if test="record.posterImg != null">
                poster_img = #{record.posterImg,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                `type` = #{record.type,jdbcType=TINYINT},
            </if>
            <if test="record.createId != null">
                create_id = #{record.createId,jdbcType=INTEGER},
            </if>
            <if test="record.createRealname != null">
                create_realname = #{record.createRealname,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.isOfficial != null">
                is_official = #{record.isOfficial,jdbcType=TINYINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update pk_channel
        set id = #{record.id,jdbcType=INTEGER},
        `name` = #{record.name,jdbcType=VARCHAR},
        slogan = #{record.slogan,jdbcType=VARCHAR},
        `desc` = #{record.desc,jdbcType=VARCHAR},
        poster_img = #{record.posterImg,jdbcType=VARCHAR},
        `type` = #{record.type,jdbcType=TINYINT},
        create_id = #{record.createId,jdbcType=INTEGER},
        create_realname = #{record.createRealname,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=TINYINT},
        is_official = #{record.isOfficial,jdbcType=TINYINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.chinaxiaopu.xiaopuMobi.model.PkChannel">
        update pk_channel
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="slogan != null">
                slogan = #{slogan,jdbcType=VARCHAR},
            </if>
            <if test="desc != null">
                `desc` = #{desc,jdbcType=VARCHAR},
            </if>
            <if test="posterImg != null">
                poster_img = #{posterImg,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=TINYINT},
            </if>
            <if test="createId != null">
                create_id = #{createId,jdbcType=INTEGER},
            </if>
            <if test="createRealname != null">
                create_realname = #{createRealname,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="isOfficial != null">
                is_official = #{isOfficial,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.chinaxiaopu.xiaopuMobi.model.PkChannel">
    update pk_channel
    set `name` = #{name,jdbcType=VARCHAR},
      slogan = #{slogan,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR},
      poster_img = #{posterImg,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=TINYINT},
      create_id = #{createId,jdbcType=INTEGER},
      create_realname = #{createRealname,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      is_official = #{isOfficial,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--频道投票汇总-->
    <select id="getFindChannelMenu" resultType="com.chinaxiaopu.xiaopuMobi.vo.topic.FindChannelVo">
      SELECT name ,images, parent_type as parentType ,IFNULL(vote_cnt,0) AS voteCnt from (
        SELECT '全部' as name,'' as images,-1 as parent_type,sum(vote_cnt) as vote_cnt from topic_ranking tr where tr.type=4 and tr.status=1
        UNION
        SELECT pc.name,pc.poster_img images,pc.id as parent_type,t0.vote_cnt from pk_channel pc
        LEFT JOIN (SELECT * FROM topic_ranking tr WHERE  tr.type=4 and tr.status=1 ) as t0 on t0.parent_type=pc.id where pc.status = 1 and pc.type = 1
      ) t
  </select>

    <!--按照频道分类查询投票列表-->
    <select id="getChannelTopicList" resultType="com.chinaxiaopu.xiaopuMobi.vo.topic.TopicPkVo"
            parameterType="com.chinaxiaopu.xiaopuMobi.dto.topic.TopicPkDto">
        SELECT * from (
            SELECT
               t.id,t.slogan,t.content,DATE_FORMAT(t.expire_time,'%Y/%m/%d %H:%i:%s') as expireTime,case when t.expire_time >= NOW() then 0 else 1 end as isOver,
               IFNULL(t1.toatle,0) toatle,t.type,p.id as prizeId,p.name as prizeName,t.create_time
            from topics t
            LEFT JOIN (
               SELECT t.challenge_topic_id,count(*) as toatle from topics t where t.is_challenger !=-1 AND t.is_delete =1 and t.is_pk =1 and t.`status` = 1 and (t.type=1 or t.type=2) and t.is_official !=1 GROUP BY t.challenge_topic_id
            ) as t1 on t1.challenge_topic_id=t.id
            LEFT JOIN topic_pk tp ON t.challenge_topic_id = tp.topic_id
            LEFT JOIN prizes p ON tp.prize_id = p.id
            where t.is_pk =1 and t.is_challenger=1 AND t.is_delete =1 and t.`status` = 1 and (t.type=1 or t.type=2)
        <if test="parentType != -1">
                and t.channel_id=#{parentType}
            </if>
        ) t where 1=1
        <choose>
            <when test="isOver == 1">
                and  t.isOver =0
            </when>
            <when test="isOver == 2">
                and  t.isOver =1
            </when>
        </choose>
        <choose>
            <when test="type == 1">
              and  t.type = 1
            </when>
            <when test="type == 2">
                and  t.type =2
            </when>
        </choose>
        <choose>
            <when test="orderType == 1">
                ORDER BY t.toatle DESC
            </when>
            <when test="orderType == 2">
                ORDER BY t.toatle ASC
            </when>
            <when test="orderType == 3">
                ORDER BY t.expireTime DESC
            </when>
            <when test="orderType == 4">
                ORDER BY t.expireTime ASC
            </when>
            <otherwise>
                ORDER BY t.create_time DESC
            </otherwise>
        </choose>

    </select>
    <!--参加此次PK的所有用户-->
    <select id="getChannelTopicUserList" resultType="com.chinaxiaopu.xiaopuMobi.vo.topic.UserPkVo"
            parameterType="java.lang.Integer">
        SELECT
        t.creator_id AS userId,
        t1.nick_name userNickname,
        t1.avatar_url avatars,
        t1.user_sex userSex,
        t.create_time as createTime,
        t.challenge_topic_id AS topicId,
				IFNULL(voteCnt,0) as voteCnt
        FROM
        topics t
        LEFT JOIN user_info t1 on t1.user_id = t.creator_id
				left join
					(select count(1) as voteCnt,topic_id from pk_votes GROUP BY topic_id) pv on pv.topic_id=t.id
        WHERE
        t.is_challenger !=- 1
        AND t.is_delete = 1
        AND t.is_pk = 1
        AND t.`status` = 1
        AND t.is_official != 1 and (t.type=1 or t.type=2) and t.challenge_topic_id=#{topicId}
        order by voteCnt desc,createTime asc
  </select>
    <select id="selectPkChannel" resultMap="BaseResultMap">
    SELECT * FROM pk_channel
    WHERE status =1 and `type` = 1
    AND is_official != 1
  </select>

    <select id="selectOfficalPkChannel" resultMap="BaseResultMap">
        SELECT * FROM pk_channel
        WHERE status =1 and `type`=1
    </select>

    <select id="selectOfficalAudioPkChannel" resultMap="BaseResultMap">
        SELECT pc.* FROM pk_channel pc
        WHERE pc.status =1 and pc.type=2
    </select>

    <!--查询频道主表数据-->
    <select id="moreChannel" resultType="com.chinaxiaopu.xiaopuMobi.vo.topic.MoreChannelVo">
        SELECT
	          t.id chanId,t.slogan,t.sort,t.poster_img posterImg,t.more
        FROM
	          channels t
	    where t.type=1
        ORDER BY t.sort desc
    </select>

    <!--查询频道子表数据-->
    <select id="moreChildList" resultType="com.chinaxiaopu.xiaopuMobi.vo.topic.MoreChildChannelVo">
    SELECT
        t.channel_id channelId,
        t.p_channel_id PId,
        t.sort,
       t1.`name` slogan,
       t1.poster_img  posterImg,
       t1.type
    FROM
        channel_associated t
      LEFT JOIN pk_channel t1 on t1.id = t.channel_id
    where t1.`status` = 1
    ORDER BY sort desc
    </select>
    <!--热门频道列表查询-->
    <select id="hotChannel" resultType="com.chinaxiaopu.xiaopuMobi.vo.topic.MoreChildChannelVo">
        SELECT
            t1.id channelId,
            t.sort,
            t1.`name` slogan,
            t1.poster_img posterImg,
            t1.type
        FROM
            recommend t
        LEFT JOIN pk_channel t1 ON t1.id = t.pid
        WHERE
            t.parent_type = 1
        AND t1.`status` = 1
        ORDER BY t.sort DESC
    </select>

    <!--频道列表查询-->
    <select id="selectAllPkChannel" resultMap="BaseResultMap">
        SELECT
         *
        FROM
       pk_channel where status = 1
    </select>

    <!--音频频道列表 》》接口-->
    <select id="findVoiceChannelList" resultType="com.chinaxiaopu.xiaopuMobi.vo.audio.AudioChannelListVo">
        SELECT t.id channelId,t.`name` slogan ,t.poster_img posterImg FROM pk_channel t where t.type=2 and t.`status` = 1
    </select>

    <!--音频贴置顶列表 》》接口-->
    <select id="findTopList" resultType="com.chinaxiaopu.xiaopuMobi.vo.audio.TopListVo">
        SELECT
        t1.id topicId,
        t1.content,
        t1.slogan
        FROM
        recommend t
        LEFT JOIN topics t1 on t.pid =t1.id
        WHERE
        t.parent_type = 5 and t1.type=3 and t1.`status`=1 and t1.is_delete = 1
        ORDER BY t.sort DESC
    </select>


    <!--音频贴推荐列表 》》接口-->
    <select id="findRecommentList" resultType="com.chinaxiaopu.xiaopuMobi.vo.audio.TopListVo">
        SELECT
            t1.id topicId,
            t1.content,
            t1.slogan,
            t2.id channelId,
            t2.`name` channelName,
            t2.poster_img posterImg,
            t3.play_cnt playCnt,
            date_format(t3.update_time,'%Y.%m.%d') updateTime,
            t4.user_id userId,
            t4.nick_name nickName,
            t4.user_sex userSex,
            t4.avatar_url avatarUrl
        FROM
            recommend t
        LEFT JOIN topics t1 on t.pid =t1.id
        LEFT JOIN pk_channel t2 on t2.id = t1.channel_id
        LEFT JOIN topic_play t3 on t3.topic_id = t1.id
        LEFT JOIN user_info t4 on t1.creator_id = t4.user_id
        WHERE
            t.parent_type =4 and t1.type=3 and t1.`status`=1 and t1.is_delete = 1
        ORDER BY t.sort DESC
    </select>

  <select id="getChannelAudioList" parameterType="com.chinaxiaopu.xiaopuMobi.dto.audio.ChannelDto" resultType="com.chinaxiaopu.xiaopuMobi.vo.audio.AudioVo">
    SELECT t.id as topicId,t.content,t.slogan,t.expire_time as createTime,t.comment_cnt as commentCnt,t.like_cnt as likeCnt,tp.play_cnt as playCnt,
      CASE WHEN tl.id IS NULL THEN 0 ELSE 1 END as isLike
    FROM topics t
    LEFT JOIN topic_play tp ON t.id = tp.topic_id
    LEFT JOIN topic_like tl ON t.id = tl.topic_id AND tl.user_id = #{userId}
    WHERE t.`status` = 1 AND t.is_delete = 1 AND t.type = 3 AND t.channel_id = #{channelId}
    <if test="timePoint != null">
      <![CDATA[
      AND t.create_time < #{timePoint}
      ]]>
    </if>
    ORDER BY t.create_time DESC
  </select>
  <select id="getSearchAudioList" parameterType="com.chinaxiaopu.xiaopuMobi.dto.audio.AudioSearchDto" resultType="com.chinaxiaopu.xiaopuMobi.vo.audio.AudioVo">
    SELECT t.id as topicId,t.content,t.slogan,t.expire_time as createTime,t.comment_cnt as commentCnt,t.like_cnt as likeCnt,tp.play_cnt as playCnt,
      CASE WHEN tl.id IS NULL THEN 0 ELSE 1 END as isLike
    FROM topics t
    LEFT JOIN topic_play tp ON t.id = tp.topic_id
    LEFT JOIN topic_like tl ON t.id = tl.topic_id AND tl.user_id = #{userId}
    WHERE t.`status` = 1 AND t.is_delete = 1 AND t.type = 3 AND t.slogan LIKE CONCAT('%','${slogan}','%')
    <if test="timePoint != null">
      <![CDATA[
      AND t.create_time < #{timePoint}
      ]]>
    </if>
    ORDER BY t.create_time DESC
  </select>
  <select id="channelInfo" parameterType="com.chinaxiaopu.xiaopuMobi.dto.audio.ChannelDto" resultType="com.chinaxiaopu.xiaopuMobi.vo.audio.ChannelVo">
    SELECT pc.id as channelId,pc.`name` as channelName,pc.`desc`,pc.poster_img as posterImg,CASE WHEN ucs.id IS NULL THEN 0 ELSE 1 END as isSubscribe
    FROM pk_channel pc
    LEFT JOIN user_channel_subscribe ucs ON pc.id = ucs.channel_id AND ucs.user_id = #{userId}
    WHERE pc.id = #{channelId}
  </select>
  <select id="audioInfo" parameterType="com.chinaxiaopu.xiaopuMobi.dto.audio.AudioDto" resultType="com.chinaxiaopu.xiaopuMobi.vo.audio.AudioInfoVo">
    SELECT t.id as topicId,t.slogan,t.content,t.like_cnt as likeCnt,t.comment_cnt as commentCnt,tp.play_cnt as playCnt,t.expire_time as createTime,
      pc.id as channelId,pc.name as channelName,pc.poster_img as posterImg,ucsl.subscribeCnt,CASE WHEN ucs.id IS NULL THEN 0 ELSE 1 END as isSubscribe,
      ui.user_id as userId,ui.nick_name as nickName,ui.avatar_url as avatar,CASE WHEN ufa.id IS NULL THEN 0 ELSE 1 END as isFocus,
      CASE WHEN tl.id IS NULL THEN 0 ELSE 1 END as isLike
    FROM topics t
    LEFT JOIN topic_play tp ON t.id = tp.topic_id
    LEFT JOIN pk_channel pc ON t.channel_id = pc.id
    LEFT JOIN user_channel_subscribe ucs ON pc.id = ucs.channel_id AND ucs.user_id = #{userId}
    LEFT JOIN
    (
    SELECT channel_id,COUNT(1) as subscribeCnt FROM user_channel_subscribe GROUP BY channel_id
    ) ucsl ON t.channel_id = ucsl.channel_id
    LEFT JOIN user_info ui ON t.creator_id = ui.user_id
    LEFT JOIN user_focus_anchor ufa ON t.creator_id = ufa.focus_user_id AND ufa.user_id = #{userId}
    LEFT JOIN topic_like tl ON t.id = tl.topic_id AND tl.user_id = #{userId}
    WHERE t.id = #{topicId}
  </select>



    
</mapper>