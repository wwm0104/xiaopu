<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinaxiaopu.xiaopuMobi.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.chinaxiaopu.xiaopuMobi.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="mobile" jdbcType="BIGINT" property="mobile" />
    <result column="school_id" jdbcType="INTEGER" property="schoolId" />
    <result column="short_name" jdbcType="VARCHAR" property="shortName" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="salt" jdbcType="CHAR" property="salt" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="join_time" jdbcType="TIMESTAMP" property="joinTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="origin" jdbcType="TINYINT" property="origin" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, mobile, school_id, short_name, password, salt, status, join_time, update_time, 
    origin
  </sql>
  <select id="selectByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.UserExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.chinaxiaopu.xiaopuMobi.model.User">
    insert into users (id, mobile, school_id, 
      short_name, password, salt, 
      status, join_time, update_time, 
      origin)
    values (#{id,jdbcType=INTEGER}, #{mobile,jdbcType=BIGINT}, #{schoolId,jdbcType=INTEGER}, 
      #{shortName,jdbcType=VARCHAR}, #{password,jdbcType=CHAR}, #{salt,jdbcType=CHAR}, 
      #{status,jdbcType=TINYINT}, #{joinTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{origin,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.chinaxiaopu.xiaopuMobi.model.User">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="schoolId != null">
        school_id,
      </if>
      <if test="shortName != null">
        short_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="joinTime != null">
        join_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="origin != null">
        origin,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=BIGINT},
      </if>
      <if test="schoolId != null">
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="shortName != null">
        #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="joinTime != null">
        #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="origin != null">
        #{origin,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.UserExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=BIGINT},
      </if>
      <if test="record.schoolId != null">
        school_id = #{record.schoolId,jdbcType=INTEGER},
      </if>
      <if test="record.shortName != null">
        short_name = #{record.shortName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=CHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.joinTime != null">
        join_time = #{record.joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.origin != null">
        origin = #{record.origin,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set id = #{record.id,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=BIGINT},
      school_id = #{record.schoolId,jdbcType=INTEGER},
      short_name = #{record.shortName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=CHAR},
      salt = #{record.salt,jdbcType=CHAR},
      status = #{record.status,jdbcType=TINYINT},
      join_time = #{record.joinTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      origin = #{record.origin,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chinaxiaopu.xiaopuMobi.model.User">
    update users
    <set>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=BIGINT},
      </if>
      <if test="schoolId != null">
        school_id = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="shortName != null">
        short_name = #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=CHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="joinTime != null">
        join_time = #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="origin != null">
        origin = #{origin,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chinaxiaopu.xiaopuMobi.model.User">
    update users
    set mobile = #{mobile,jdbcType=BIGINT},
      school_id = #{schoolId,jdbcType=INTEGER},
      short_name = #{shortName,jdbcType=VARCHAR},
      password = #{password,jdbcType=CHAR},
      salt = #{salt,jdbcType=CHAR},
      status = #{status,jdbcType=TINYINT},
      join_time = #{joinTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      origin = #{origin,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>