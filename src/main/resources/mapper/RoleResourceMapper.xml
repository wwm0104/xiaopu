<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinaxiaopu.xiaopuMobi.mapper.RoleResourceMapper">
    <resultMap id="BaseResultMap" type="com.chinaxiaopu.xiaopuMobi.model.RoleResource">
        <id column="role_id" jdbcType="INTEGER" property="roleId"/>
        <id column="resource_id" jdbcType="INTEGER" property="resourceId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    role_id, resource_id
  </sql>
    <select id="selectByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.RoleResourceExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from role_resource
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="com.chinaxiaopu.xiaopuMobi.model.RoleResource">
    delete from role_resource
    where role_id = #{roleId,jdbcType=INTEGER}
      and resource_id = #{resourceId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.RoleResourceExample">
        delete from role_resource
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.chinaxiaopu.xiaopuMobi.model.RoleResource">
    insert into role_resource (role_id, resource_id)
    values (#{roleId,jdbcType=INTEGER}, #{resourceId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.chinaxiaopu.xiaopuMobi.model.RoleResource">
        insert into role_resource
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="resourceId != null">
                resource_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="resourceId != null">
                #{resourceId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.RoleResourceExample"
            resultType="java.lang.Long">
        select count(*) from role_resource
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="selectByRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select * from role_resource where role_id = #{roleId,jdbcType=INTEGER}
  </select>

    <update id="updateByExampleSelective" parameterType="map">
        update role_resource
        <set>
            <if test="record.roleId != null">
                role_id = #{record.roleId,jdbcType=INTEGER},
            </if>
            <if test="record.resourceId != null">
                resource_id = #{record.resourceId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update role_resource
        set role_id = #{record.roleId,jdbcType=INTEGER},
        resource_id = #{record.resourceId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <insert id="insertRoleResourceList" useGeneratedKeys="true" parameterType="java.util.List">
        insert into role_resource (role_id, resource_id)values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.roleId},#{item.resourceId})
        </foreach>
    </insert>


    <insert id="insertRoleResources" parameterType="map">
         insert into role_resource (role_id, resource_id)
        values (#{roleId,jdbcType=INTEGER}, #{resourceId,jdbcType=INTEGER})
   </insert>


    <!--<delete id="deleteResources" parameterType="list">-->
    <!--delete from role_resource-->
    <!--WHERE id in-->
    <!--<foreach collection="resources" item="id" open="(" close=")"-->
    <!--separator=",">-->
    <!--#{id}-->
    <!--</foreach>-->
    <!--</delete>-->
    <delete id="deleteRoleResource" parameterType="map">
       delete from role_resource where role_id = #{roleId,jdbcType = INTEGER}
   </delete>
    <delete id="deleteRoleResourceByResourceIds" parameterType="java.util.List">
        delete from role_resource where resource_id in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <delete id="deleteRoleResourceByResourceId" parameterType="java.lang.Integer">
    delete from role_resource where resource_id = #{resourceId,jdbcType = INTEGER}
  </delete>


</mapper>