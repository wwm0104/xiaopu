<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinaxiaopu.xiaopuMobi.mapper.PkPrizeResultMapper">
  <resultMap id="BaseResultMap" type="com.chinaxiaopu.xiaopuMobi.model.PkPrizeResult">
    <id column="pk_id" jdbcType="INTEGER" property="pkId" />
    <id column="reward_user_id" jdbcType="INTEGER" property="rewardUserId" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="prize_name" jdbcType="VARCHAR" property="prizeName" />
    <result column="prize_type" jdbcType="TINYINT" property="prizeType" />
    <result column="prize_num" jdbcType="INTEGER" property="prizeNum" />
    <result column="challenge_topic_id" jdbcType="INTEGER" property="challengeTopicId" />
    <result column="challenge_topic_slogan" jdbcType="VARCHAR" property="challengeTopicSlogan" />
    <result column="reward_user_nickname" jdbcType="VARCHAR" property="rewardUserNickname" />
    <result column="reward_user_realname" jdbcType="VARCHAR" property="rewardUserRealname" />
    <result column="reward_user_avatar" jdbcType="VARCHAR" property="rewardUserAvatar" />
    <result column="effective_time" jdbcType="TIMESTAMP" property="effectiveTime" />
    <result column="expire_time" jdbcType="TIMESTAMP" property="expireTime" />
    <result column="take_time" jdbcType="TIMESTAMP" property="takeTime" />
    <result column="has_take" jdbcType="TINYINT" property="hasTake" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pk_id, reward_user_id, code, prize_name, prize_type, prize_num, challenge_topic_id, 
    challenge_topic_slogan, reward_user_nickname, reward_user_realname, reward_user_avatar, 
    effective_time, expire_time, take_time, has_take
  </sql>
  <select id="selectByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.PkPrizeResultExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pk_prize_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.chinaxiaopu.xiaopuMobi.model.PkPrizeResultKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pk_prize_result
    where pk_id = #{pkId,jdbcType=INTEGER}
      and reward_user_id = #{rewardUserId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.chinaxiaopu.xiaopuMobi.model.PkPrizeResultKey">
    delete from pk_prize_result
    where pk_id = #{pkId,jdbcType=INTEGER}
      and reward_user_id = #{rewardUserId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.PkPrizeResultExample">
    delete from pk_prize_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chinaxiaopu.xiaopuMobi.model.PkPrizeResult">
    insert into pk_prize_result (pk_id, reward_user_id, code, 
      prize_name, prize_type, prize_num, 
      challenge_topic_id, challenge_topic_slogan, 
      reward_user_nickname, reward_user_realname, 
      reward_user_avatar, effective_time, expire_time, 
      take_time, has_take)
    values (#{pkId,jdbcType=INTEGER}, #{rewardUserId,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, 
      #{prizeName,jdbcType=VARCHAR}, #{prizeType,jdbcType=TINYINT}, #{prizeNum,jdbcType=INTEGER}, 
      #{challengeTopicId,jdbcType=INTEGER}, #{challengeTopicSlogan,jdbcType=VARCHAR}, 
      #{rewardUserNickname,jdbcType=VARCHAR}, #{rewardUserRealname,jdbcType=VARCHAR}, 
      #{rewardUserAvatar,jdbcType=VARCHAR}, #{effectiveTime,jdbcType=TIMESTAMP}, #{expireTime,jdbcType=TIMESTAMP}, 
      #{takeTime,jdbcType=TIMESTAMP}, #{hasTake,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.chinaxiaopu.xiaopuMobi.model.PkPrizeResult">
    insert into pk_prize_result
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pkId != null">
        pk_id,
      </if>
      <if test="rewardUserId != null">
        reward_user_id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="prizeName != null">
        prize_name,
      </if>
      <if test="prizeType != null">
        prize_type,
      </if>
      <if test="prizeNum != null">
        prize_num,
      </if>
      <if test="challengeTopicId != null">
        challenge_topic_id,
      </if>
      <if test="challengeTopicSlogan != null">
        challenge_topic_slogan,
      </if>
      <if test="rewardUserNickname != null">
        reward_user_nickname,
      </if>
      <if test="rewardUserRealname != null">
        reward_user_realname,
      </if>
      <if test="rewardUserAvatar != null">
        reward_user_avatar,
      </if>
      <if test="effectiveTime != null">
        effective_time,
      </if>
      <if test="expireTime != null">
        expire_time,
      </if>
      <if test="takeTime != null">
        take_time,
      </if>
      <if test="hasTake != null">
        has_take,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pkId != null">
        #{pkId,jdbcType=INTEGER},
      </if>
      <if test="rewardUserId != null">
        #{rewardUserId,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="prizeName != null">
        #{prizeName,jdbcType=VARCHAR},
      </if>
      <if test="prizeType != null">
        #{prizeType,jdbcType=TINYINT},
      </if>
      <if test="prizeNum != null">
        #{prizeNum,jdbcType=INTEGER},
      </if>
      <if test="challengeTopicId != null">
        #{challengeTopicId,jdbcType=INTEGER},
      </if>
      <if test="challengeTopicSlogan != null">
        #{challengeTopicSlogan,jdbcType=VARCHAR},
      </if>
      <if test="rewardUserNickname != null">
        #{rewardUserNickname,jdbcType=VARCHAR},
      </if>
      <if test="rewardUserRealname != null">
        #{rewardUserRealname,jdbcType=VARCHAR},
      </if>
      <if test="rewardUserAvatar != null">
        #{rewardUserAvatar,jdbcType=VARCHAR},
      </if>
      <if test="effectiveTime != null">
        #{effectiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null">
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="takeTime != null">
        #{takeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hasTake != null">
        #{hasTake,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.PkPrizeResultExample" resultType="java.lang.Long">
    select count(*) from pk_prize_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pk_prize_result
    <set>
      <if test="record.pkId != null">
        pk_id = #{record.pkId,jdbcType=INTEGER},
      </if>
      <if test="record.rewardUserId != null">
        reward_user_id = #{record.rewardUserId,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.prizeName != null">
        prize_name = #{record.prizeName,jdbcType=VARCHAR},
      </if>
      <if test="record.prizeType != null">
        prize_type = #{record.prizeType,jdbcType=TINYINT},
      </if>
      <if test="record.prizeNum != null">
        prize_num = #{record.prizeNum,jdbcType=INTEGER},
      </if>
      <if test="record.challengeTopicId != null">
        challenge_topic_id = #{record.challengeTopicId,jdbcType=INTEGER},
      </if>
      <if test="record.challengeTopicSlogan != null">
        challenge_topic_slogan = #{record.challengeTopicSlogan,jdbcType=VARCHAR},
      </if>
      <if test="record.rewardUserNickname != null">
        reward_user_nickname = #{record.rewardUserNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.rewardUserRealname != null">
        reward_user_realname = #{record.rewardUserRealname,jdbcType=VARCHAR},
      </if>
      <if test="record.rewardUserAvatar != null">
        reward_user_avatar = #{record.rewardUserAvatar,jdbcType=VARCHAR},
      </if>
      <if test="record.effectiveTime != null">
        effective_time = #{record.effectiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expireTime != null">
        expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.takeTime != null">
        take_time = #{record.takeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.hasTake != null">
        has_take = #{record.hasTake,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pk_prize_result
    set pk_id = #{record.pkId,jdbcType=INTEGER},
      reward_user_id = #{record.rewardUserId,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      prize_name = #{record.prizeName,jdbcType=VARCHAR},
      prize_type = #{record.prizeType,jdbcType=TINYINT},
      prize_num = #{record.prizeNum,jdbcType=INTEGER},
      challenge_topic_id = #{record.challengeTopicId,jdbcType=INTEGER},
      challenge_topic_slogan = #{record.challengeTopicSlogan,jdbcType=VARCHAR},
      reward_user_nickname = #{record.rewardUserNickname,jdbcType=VARCHAR},
      reward_user_realname = #{record.rewardUserRealname,jdbcType=VARCHAR},
      reward_user_avatar = #{record.rewardUserAvatar,jdbcType=VARCHAR},
      effective_time = #{record.effectiveTime,jdbcType=TIMESTAMP},
      expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
      take_time = #{record.takeTime,jdbcType=TIMESTAMP},
      has_take = #{record.hasTake,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chinaxiaopu.xiaopuMobi.model.PkPrizeResult">
    update pk_prize_result
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="prizeName != null">
        prize_name = #{prizeName,jdbcType=VARCHAR},
      </if>
      <if test="prizeType != null">
        prize_type = #{prizeType,jdbcType=TINYINT},
      </if>
      <if test="prizeNum != null">
        prize_num = #{prizeNum,jdbcType=INTEGER},
      </if>
      <if test="challengeTopicId != null">
        challenge_topic_id = #{challengeTopicId,jdbcType=INTEGER},
      </if>
      <if test="challengeTopicSlogan != null">
        challenge_topic_slogan = #{challengeTopicSlogan,jdbcType=VARCHAR},
      </if>
      <if test="rewardUserNickname != null">
        reward_user_nickname = #{rewardUserNickname,jdbcType=VARCHAR},
      </if>
      <if test="rewardUserRealname != null">
        reward_user_realname = #{rewardUserRealname,jdbcType=VARCHAR},
      </if>
      <if test="rewardUserAvatar != null">
        reward_user_avatar = #{rewardUserAvatar,jdbcType=VARCHAR},
      </if>
      <if test="effectiveTime != null">
        effective_time = #{effectiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null">
        expire_time = #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="takeTime != null">
        take_time = #{takeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hasTake != null">
        has_take = #{hasTake,jdbcType=TINYINT},
      </if>
    </set>
    where pk_id = #{pkId,jdbcType=INTEGER}
      and reward_user_id = #{rewardUserId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chinaxiaopu.xiaopuMobi.model.PkPrizeResult">
    update pk_prize_result
    set code = #{code,jdbcType=VARCHAR},
      prize_name = #{prizeName,jdbcType=VARCHAR},
      prize_type = #{prizeType,jdbcType=TINYINT},
      prize_num = #{prizeNum,jdbcType=INTEGER},
      challenge_topic_id = #{challengeTopicId,jdbcType=INTEGER},
      challenge_topic_slogan = #{challengeTopicSlogan,jdbcType=VARCHAR},
      reward_user_nickname = #{rewardUserNickname,jdbcType=VARCHAR},
      reward_user_realname = #{rewardUserRealname,jdbcType=VARCHAR},
      reward_user_avatar = #{rewardUserAvatar,jdbcType=VARCHAR},
      effective_time = #{effectiveTime,jdbcType=TIMESTAMP},
      expire_time = #{expireTime,jdbcType=TIMESTAMP},
      take_time = #{takeTime,jdbcType=TIMESTAMP},
      has_take = #{hasTake,jdbcType=TINYINT}
    where pk_id = #{pkId,jdbcType=INTEGER}
      and reward_user_id = #{rewardUserId,jdbcType=INTEGER}
  </update>

  <select id="selectByPrizeIdAndUserId" parameterType="map" resultType="com.chinaxiaopu.xiaopuMobi.vo.topic.PrizeViewVo">
    SELECT p.id as prizeId,p.prize as prize,ppr.prize_name as prizeName,ppr.prize_num as prizeNum,ppr.challenge_topic_id as challengeTopicId,ppr.challenge_topic_slogan as topicSlogan,
		    ppr.has_take as hasTake,ppr.code,ppr.expire_time as expireTime,t.id as topicId,tp.id as pkId
    FROM pk_prize_result ppr
    LEFT JOIN topic_pk tp ON ppr.pk_id = tp.id
    LEFT JOIN prizes p ON tp.prize_id = p.id
	LEFT JOIN topics t ON t.challenge_topic_id = ppr.challenge_topic_id
    WHERE ppr.reward_user_id = #{userId} AND p.id = #{prizeId} AND t.challenge_topic_id = #{topicId} AND t.creator_id = #{userId}
  </select>

  <!-- 将challenge_topic_id 命名为 topicId，为了减少关联表，详情时，传topicId就行了 -->
  <select id="selectByUserId" parameterType="map" resultType="com.chinaxiaopu.xiaopuMobi.vo.topic.PrizeViewVo">
    SELECT p.id as prizeId,p.prize as prize,ppr.prize_name as prizeName,ppr.prize_num as prizeNum,ppr.challenge_topic_id as topicId,ppr.challenge_topic_slogan as topicSlogan
    FROM pk_prize_result ppr
    LEFT JOIN topic_pk tp ON ppr.pk_id = tp.id
    LEFT JOIN prizes p ON tp.prize_id = p.id
    WHERE ppr.reward_user_id = #{userId} AND p.type = #{type}
    ORDER BY ppr.prize_type,ppr.has_take,tp.id DESC
  </select>

   <update id="updatePrizeTake" parameterType="com.chinaxiaopu.xiaopuMobi.dto.topic.PrizeTakeDto">
     UPDATE pk_prize_result SET has_take = 1,
     take_time = #{takeTime}
     WHERE reward_user_id = #{rewardUserId}
     AND pk_id = #{pkId}
   </update>
   <update id="updateCodeByPkId" parameterType="map">
     UPDATE pk_prize_result SET code = #{code,jdbcType=VARCHAR}
     WHERE pk_id = #{pkId,jdbcType=INTEGER}
   </update>

  <select id="checkIsTake" parameterType="map" resultType="java.lang.Integer">
      SELECT has_take FROM pk_prize_result
      WHERE pk_id = #{pkId}
      AND reward_user_id = #{userId}
  </select>
</mapper>