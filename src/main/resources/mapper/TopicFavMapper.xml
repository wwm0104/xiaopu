<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinaxiaopu.xiaopuMobi.mapper.TopicFavMapper">
  <resultMap id="BaseResultMap" type="com.chinaxiaopu.xiaopuMobi.model.TopicFav">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="topic_id" jdbcType="INTEGER" property="topicId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_nickname" jdbcType="VARCHAR" property="userNickname" />
    <result column="fav_time" jdbcType="TIMESTAMP" property="favTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, topic_id, user_id, user_nickname, fav_time
  </sql>
  <select id="selectByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.TopicFavExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from topic_fav
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from topic_fav
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from topic_fav
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.TopicFavExample">
    delete from topic_fav
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chinaxiaopu.xiaopuMobi.model.TopicFav">
    insert into topic_fav (id, topic_id, user_id, 
      user_nickname, fav_time)
    values (#{id,jdbcType=INTEGER}, #{topicId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{userNickname,jdbcType=VARCHAR}, #{favTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.chinaxiaopu.xiaopuMobi.model.TopicFav">
    insert into topic_fav
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="topicId != null">
        topic_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userNickname != null">
        user_nickname,
      </if>
      <if test="favTime != null">
        fav_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="topicId != null">
        #{topicId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userNickname != null">
        #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="favTime != null">
        #{favTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.TopicFavExample" resultType="java.lang.Long">
    select count(*) from topic_fav
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update topic_fav
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.topicId != null">
        topic_id = #{record.topicId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userNickname != null">
        user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.favTime != null">
        fav_time = #{record.favTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update topic_fav
    set id = #{record.id,jdbcType=INTEGER},
      topic_id = #{record.topicId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      fav_time = #{record.favTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chinaxiaopu.xiaopuMobi.model.TopicFav">
    update topic_fav
    <set>
      <if test="topicId != null">
        topic_id = #{topicId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userNickname != null">
        user_nickname = #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="favTime != null">
        fav_time = #{favTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chinaxiaopu.xiaopuMobi.model.TopicFav">
    update topic_fav
    set topic_id = #{topicId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      user_nickname = #{userNickname,jdbcType=VARCHAR},
      fav_time = #{favTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectCountByTopicIdAndUserId" parameterType="map" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM topic_fav WHERE topic_id=#{topicId} AND user_id=#{userId}
  </select>

  <resultMap id="BaseResultMap1" type="com.chinaxiaopu.xiaopuMobi.model.Topic">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="creator_id" jdbcType="INTEGER" property="creatorId" />
    <result column="creator_nickname" jdbcType="VARCHAR" property="creatorNickname" />
    <result column="creator_avatar" jdbcType="VARCHAR" property="creatorAvatar" />
    <result column="school_id" jdbcType="INTEGER" property="schoolId" />
    <result column="school_name" jdbcType="VARCHAR" property="schoolName" />
    <result column="challenge_topic_id" jdbcType="INTEGER" property="challengeTopicId" />
    <result column="is_challenger" jdbcType="TINYINT" property="isChallenger" />
    <result column="challenge_id" jdbcType="INTEGER" property="challengeId" />
    <result column="challenge_nickname" jdbcType="VARCHAR" property="challengeNickname" />
    <result column="challenge_avatar" jdbcType="VARCHAR" property="challengeAvatar" />
    <result column="channel_id" jdbcType="INTEGER" property="channelId" />
    <result column="channel_name" jdbcType="VARCHAR" property="channelName" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="slogan" jdbcType="VARCHAR" property="slogan" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="recommend" jdbcType="TINYINT" property="recommend" />
    <result column="like_cnt" jdbcType="INTEGER" property="likeCnt" />
    <result column="favorite_cnt" jdbcType="INTEGER" property="favoriteCnt" />
    <result column="comment_cnt" jdbcType="INTEGER" property="commentCnt" />
    <result column="is_official" jdbcType="TINYINT" property="isOfficial" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="expire_time" jdbcType="TIMESTAMP" property="expireTime" />
    <result column="is_pk" jdbcType="TINYINT" property="isPk" />
    <result column="further" jdbcType="VARCHAR" property="further" />
  </resultMap>

  <select id="selectUserFavTopic" resultMap="BaseResultMap1" parameterType="com.chinaxiaopu.xiaopuMobi.dto.MyTopicParam">
    SELECT ts.id, ts.creator_id, ui.nick_name as creator_nickname, ui.avatar_url as creator_avatar, ts.school_id, ts.school_name, ts.challenge_topic_id,
      ts.is_challenger, ts.challenge_id, ts.challenge_nickname, ts.challenge_avatar, ts.channel_id, ts.channel_name,
      ts.type, ts.slogan, ts.content, ts.recommend, ts.like_cnt, ts.favorite_cnt, ts.comment_cnt, ts.is_official,
      ts.is_delete, ts.create_time, ts.update_time, ts.expire_time, ts.is_pk, ts.further, ts.status, ui.user_sex as userSex,
      p.id as prizeId,p.name as prizeName
    FROM  topic_fav tf
    LEFT JOIN topics ts  ON ts.id = tf.topic_id
    LEFT JOIN user_info ui ON ts.creator_id = ui.user_id
    LEFT JOIN topic_pk tp ON ts.id = tp.topic_id
    LEFT JOIN prizes p ON tp.prize_id = p.id
    WHERE tf.user_id = #{userId}
    AND ts.is_delete = 1
    AND ts.status = 1
    AND ts.type != 3
    ORDER BY tf.fav_time DESC
  </select>
  <delete id="deleteByTopicIdAndUserId" parameterType="map">
    delete from topic_fav
    where topic_id=#{topicId} AND user_id=#{userId}
  </delete>
  <select id="selectTopicIdListByUserId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    SELECT topic_id FROM topic_fav WHERE user_id = #{userId}
  </select>
</mapper>