<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinaxiaopu.xiaopuMobi.mapper.TicketMapper">
  <resultMap id="BaseResultMap" type="com.chinaxiaopu.xiaopuMobi.model.Ticket">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="ticket_name" jdbcType="VARCHAR" property="ticketName" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="business_id" jdbcType="INTEGER" property="businessId" />
    <result column="business_type" jdbcType="TINYINT" property="businessType" />
    <result column="ticket_cnt" jdbcType="INTEGER" property="ticketCnt" />
    <result column="remaining_cnt" jdbcType="INTEGER" property="remainingCnt" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="expire_time" jdbcType="TIMESTAMP" property="expireTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, ticket_name, description, business_id, business_type, ticket_cnt, remaining_cnt, 
    create_id, create_time, expire_time
  </sql>
  <select id="selectByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.TicketExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tickets
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tickets
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tickets
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.TicketExample">
    delete from tickets
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chinaxiaopu.xiaopuMobi.model.Ticket">
    insert into tickets (id, ticket_name, description, 
      business_id, business_type, ticket_cnt, 
      remaining_cnt, create_id, create_time, 
      expire_time)
    values (#{id,jdbcType=INTEGER}, #{ticketName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{businessId,jdbcType=INTEGER}, #{businessType,jdbcType=TINYINT}, #{ticketCnt,jdbcType=INTEGER}, 
      #{remainingCnt,jdbcType=INTEGER}, #{createId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{expireTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.chinaxiaopu.xiaopuMobi.model.Ticket">
    insert into tickets
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ticketName != null">
        ticket_name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="businessId != null">
        business_id,
      </if>
      <if test="businessType != null">
        business_type,
      </if>
      <if test="ticketCnt != null">
        ticket_cnt,
      </if>
      <if test="remainingCnt != null">
        remaining_cnt,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="expireTime != null">
        expire_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ticketName != null">
        #{ticketName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="businessId != null">
        #{businessId,jdbcType=INTEGER},
      </if>
      <if test="businessType != null">
        #{businessType,jdbcType=TINYINT},
      </if>
      <if test="ticketCnt != null">
        #{ticketCnt,jdbcType=INTEGER},
      </if>
      <if test="remainingCnt != null">
        #{remainingCnt,jdbcType=INTEGER},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null">
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.TicketExample" resultType="java.lang.Long">
    select count(*) from tickets
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tickets
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ticketName != null">
        ticket_name = #{record.ticketName,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.businessId != null">
        business_id = #{record.businessId,jdbcType=INTEGER},
      </if>
      <if test="record.businessType != null">
        business_type = #{record.businessType,jdbcType=TINYINT},
      </if>
      <if test="record.ticketCnt != null">
        ticket_cnt = #{record.ticketCnt,jdbcType=INTEGER},
      </if>
      <if test="record.remainingCnt != null">
        remaining_cnt = #{record.remainingCnt,jdbcType=INTEGER},
      </if>
      <if test="record.createId != null">
        create_id = #{record.createId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expireTime != null">
        expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tickets
    set id = #{record.id,jdbcType=INTEGER},
      ticket_name = #{record.ticketName,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      business_id = #{record.businessId,jdbcType=INTEGER},
      business_type = #{record.businessType,jdbcType=TINYINT},
      ticket_cnt = #{record.ticketCnt,jdbcType=INTEGER},
      remaining_cnt = #{record.remainingCnt,jdbcType=INTEGER},
      create_id = #{record.createId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      expire_time = #{record.expireTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chinaxiaopu.xiaopuMobi.model.Ticket">
    update tickets
    <set>
      <if test="ticketName != null">
        ticket_name = #{ticketName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="businessId != null">
        business_id = #{businessId,jdbcType=INTEGER},
      </if>
      <if test="businessType != null">
        business_type = #{businessType,jdbcType=TINYINT},
      </if>
      <if test="ticketCnt != null">
        ticket_cnt = #{ticketCnt,jdbcType=INTEGER},
      </if>
      <if test="remainingCnt != null">
        remaining_cnt = #{remainingCnt,jdbcType=INTEGER},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null">
        expire_time = #{expireTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chinaxiaopu.xiaopuMobi.model.Ticket">
    update tickets
    set ticket_name = #{ticketName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      business_id = #{businessId,jdbcType=INTEGER},
      business_type = #{businessType,jdbcType=TINYINT},
      ticket_cnt = #{ticketCnt,jdbcType=INTEGER},
      remaining_cnt = #{remainingCnt,jdbcType=INTEGER},
      create_id = #{createId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      expire_time = #{expireTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getRemainingTicket" parameterType="map" resultType="java.lang.Integer">
    SELECT remaining_cnt FROM tickets WHERE business_id = #{businessId} AND business_type = #{businessType}
  </select>
  <select id="selectByBusinessIdAndType" parameterType="map" resultMap="BaseResultMap">
    SELECT * FROM tickets WHERE business_id = #{businessId} AND business_type = #{businessType}
  </select>
  <select id="ticketList" parameterType="java.lang.Integer" resultType="com.chinaxiaopu.xiaopuMobi.vo.TicketVo">
    SELECT ut.id as id,t.id as ticketId,e.id as eventId,t.business_type as businessType,e.`subject` as eventSubject,e.start_time as startTime,e.end_time as endTime,e.address as eventAddress,
      ut.`status` as ticketStatus,e.poster_img as posterImg
    FROM user_ticket ut
    LEFT JOIN tickets t ON ut.ticket_id = t.id
    LEFT JOIN `events` e ON t.business_id = e.id AND t.business_type = 2
    WHERE ut.user_id = #{userId}
  </select>
  <select id="ticketInfo" parameterType="map" resultType="com.chinaxiaopu.xiaopuMobi.vo.TicketVo">
    SELECT ut.id as id,t.id as ticketId,e.id as eventId,t.business_type as businessType,e.`subject` as eventSubject,e.start_time as startTime,e.end_time as endTime,e.address as eventAddress,
      ut.qrcode as ticketQrcode,ut.`status` as ticketStatus,e.poster_img as posterImg
    FROM user_ticket ut
    LEFT JOIN tickets t ON ut.ticket_id = t.id
    LEFT JOIN `events` e ON t.business_id = e.id AND t.business_type = 2
    WHERE ut.user_id = #{userId} AND ut.ticket_id = #{ticketId}
  </select>
  <select id="isNeedTicket" parameterType="map" resultType="java.lang.Integer">
    SELECT COUNT(0) FROM tickets WHERE business_id = #{businessId} AND business_type = #{businessType}
  </select>
  <select id="getSignCnt" parameterType="map" resultType="java.lang.Integer">
    SELECT COUNT(0) FROM user_ticket WHERE business_id = #{businessId} AND business_type = #{businessType} AND `status` = 1
  </select>
</mapper>