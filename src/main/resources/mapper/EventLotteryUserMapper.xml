<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinaxiaopu.xiaopuMobi.mapper.EventLotteryUserMapper">
  <resultMap id="BaseResultMap" type="com.chinaxiaopu.xiaopuMobi.model.EventLotteryUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="lottery_id" jdbcType="INTEGER" property="lotteryId" />
    <result column="event_id" jdbcType="INTEGER" property="eventId" />
    <result column="event_name" jdbcType="VARCHAR" property="eventName" />
    <result column="round" jdbcType="INTEGER" property="round" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, lottery_id, event_id, event_name, round, create_time
  </sql>
  <select id="selectByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.EventLotteryUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from event_lottery_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from event_lottery_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from event_lottery_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.EventLotteryUserExample">
    delete from event_lottery_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chinaxiaopu.xiaopuMobi.model.EventLotteryUser">
    insert into event_lottery_user (id, user_id, lottery_id, 
      event_id, event_name, round, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{lotteryId,jdbcType=INTEGER}, 
      #{eventId,jdbcType=INTEGER}, #{eventName,jdbcType=VARCHAR}, #{round,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.chinaxiaopu.xiaopuMobi.model.EventLotteryUser">
    insert into event_lottery_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="lotteryId != null">
        lottery_id,
      </if>
      <if test="eventId != null">
        event_id,
      </if>
      <if test="eventName != null">
        event_name,
      </if>
      <if test="round != null">
        round,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="lotteryId != null">
        #{lotteryId,jdbcType=INTEGER},
      </if>
      <if test="eventId != null">
        #{eventId,jdbcType=INTEGER},
      </if>
      <if test="eventName != null">
        #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="round != null">
        #{round,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.EventLotteryUserExample" resultType="java.lang.Long">
    select count(*) from event_lottery_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update event_lottery_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.lotteryId != null">
        lottery_id = #{record.lotteryId,jdbcType=INTEGER},
      </if>
      <if test="record.eventId != null">
        event_id = #{record.eventId,jdbcType=INTEGER},
      </if>
      <if test="record.eventName != null">
        event_name = #{record.eventName,jdbcType=VARCHAR},
      </if>
      <if test="record.round != null">
        round = #{record.round,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update event_lottery_user
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      lottery_id = #{record.lotteryId,jdbcType=INTEGER},
      event_id = #{record.eventId,jdbcType=INTEGER},
      event_name = #{record.eventName,jdbcType=VARCHAR},
      round = #{record.round,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chinaxiaopu.xiaopuMobi.model.EventLotteryUser">
    update event_lottery_user
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="lotteryId != null">
        lottery_id = #{lotteryId,jdbcType=INTEGER},
      </if>
      <if test="eventId != null">
        event_id = #{eventId,jdbcType=INTEGER},
      </if>
      <if test="eventName != null">
        event_name = #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="round != null">
        round = #{round,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chinaxiaopu.xiaopuMobi.model.EventLotteryUser">
    update event_lottery_user
    set user_id = #{userId,jdbcType=INTEGER},
      lottery_id = #{lotteryId,jdbcType=INTEGER},
      event_id = #{eventId,jdbcType=INTEGER},
      event_name = #{eventName,jdbcType=VARCHAR},
      round = #{round,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <!--查询最大轮数-->
  <select id="selectEventLotteryUserByEventId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    max(t.round) round
    FROM
    event_lottery_user t
    WHERE
    t.event_id =#{eventId}
  </select>
  <!--查询当前轮的获奖人数-->
  <select id="selectAllWinerUser" parameterType="java.lang.Integer" resultType="com.chinaxiaopu.xiaopuMobi.vo.eventLottery.EventLotteryUserVo">
  SELECT @row := @row + 1 as row,t0.* from (
      SELECT
          t.user_id userId,t1.avatar_url userImages,t1.user_sex userSex,t1.nick_name userName,INSERT(t1.mobile,4,4,'****') phone
      FROM
          event_lottery_user t
          LEFT JOIN user_info t1 on t1.user_id = t.user_id
      WHERE
          t.event_id =#{eventId}
      AND t.round =#{round}
      ORDER BY t.create_time desc
   ) as t0,(SELECT @row := 0)as r
  </select>
  <!--查询所有的未抽奖人员-->
  <select id="selectAllUserList" parameterType="java.lang.Integer" resultType="com.chinaxiaopu.xiaopuMobi.vo.eventLottery.EventLotteryUserVo">
   SELECT
		t.member_id userId,
		t1.avatar_url userImages,
		t1.user_sex userSex,
		t1.nick_name userName,
          INSERT (t1.mobile, 4, 4, '****') phone
  FROM
          event_members t
  LEFT JOIN user_info t1 ON t1.user_id = t.member_id
  WHERE t.event_id =#{eventId}
  AND t.`status` = 1
  AND t.is_join = 1 and  NOT  EXISTS (SELECT eu.* FROM event_lottery_user eu WHERE eu.user_id=t.member_id AND eu.event_id=#{eventId})
  </select>
  <select id="selectUserByEventIdAndRound" parameterType="java.lang.Integer" resultType="com.chinaxiaopu.xiaopuMobi.vo.eventLottery.LotteryUserVo">
    SELECT
	u.avatar_url AS avatarUrl,
	u.user_id AS userId,
	u.nick_name AS nickName,
	e.create_time as createTime
  FROM
      event_lottery_user e
  LEFT JOIN user_info u ON u.user_id = e.user_id
  WHERE
      e.event_id = #{eventId}
  AND e.round = #{round}
  order by e.create_time asc
  </select>

</mapper>