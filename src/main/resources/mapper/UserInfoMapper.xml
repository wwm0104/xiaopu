<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinaxiaopu.xiaopuMobi.mapper.UserInfoMapper">
    <resultMap id="BaseResultMap" type="com.chinaxiaopu.xiaopuMobi.model.UserInfo">
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="school_id" jdbcType="INTEGER" property="schoolId"/>
        <result column="school_name" jdbcType="VARCHAR" property="schoolName"/>
        <result column="mobile" jdbcType="BIGINT" property="mobile"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="user_sex" jdbcType="TINYINT" property="userSex"/>
        <result column="student_no" jdbcType="VARCHAR" property="studentNo"/>
        <result column="qq" jdbcType="VARCHAR" property="qq"/>
        <result column="valid" jdbcType="TINYINT" property="valid"/>
        <result column="is_president" jdbcType="TINYINT" property="isPresident"/>
        <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    user_id, school_id, school_name, mobile, nick_name, real_name, user_sex, student_no, 
    qq, valid, is_president, avatar_url
  </sql>
    <select id="selectByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.UserInfoExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_info
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_info
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.UserInfoExample">
        delete from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.chinaxiaopu.xiaopuMobi.model.UserInfo">
    insert into user_info (user_id, school_id, school_name, 
      mobile, nick_name, real_name, 
      user_sex, student_no, qq, 
      valid, is_president, avatar_url
      )
    values (#{userId,jdbcType=INTEGER}, #{schoolId,jdbcType=INTEGER}, #{schoolName,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=BIGINT}, #{nickName,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{userSex,jdbcType=TINYINT}, #{studentNo,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{valid,jdbcType=TINYINT}, #{isPresident,jdbcType=TINYINT}, #{avatarUrl,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.chinaxiaopu.xiaopuMobi.model.UserInfo">
        insert into user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="schoolId != null">
                school_id,
            </if>
            <if test="schoolName != null">
                school_name,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="nickName != null">
                nick_name,
            </if>
            <if test="realName != null">
                real_name,
            </if>
            <if test="userSex != null">
                user_sex,
            </if>
            <if test="studentNo != null">
                student_no,
            </if>
            <if test="qq != null">
                qq,
            </if>
            <if test="valid != null">
                valid,
            </if>
            <if test="isPresident != null">
                is_president,
            </if>
            <if test="avatarUrl != null">
                avatar_url,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="schoolId != null">
                #{schoolId,jdbcType=INTEGER},
            </if>
            <if test="schoolName != null">
                #{schoolName,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=BIGINT},
            </if>
            <if test="nickName != null">
                #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="userSex != null">
                #{userSex,jdbcType=TINYINT},
            </if>
            <if test="studentNo != null">
                #{studentNo,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                #{qq,jdbcType=VARCHAR},
            </if>
            <if test="valid != null">
                #{valid,jdbcType=TINYINT},
            </if>
            <if test="isPresident != null">
                #{isPresident,jdbcType=TINYINT},
            </if>
            <if test="avatarUrl != null">
                #{avatarUrl,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.chinaxiaopu.xiaopuMobi.model.UserInfoExample"
            resultType="java.lang.Long">
        select count(*) from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user_info
        <set>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.schoolId != null">
                school_id = #{record.schoolId,jdbcType=INTEGER},
            </if>
            <if test="record.schoolName != null">
                school_name = #{record.schoolName,jdbcType=VARCHAR},
            </if>
            <if test="record.mobile != null">
                mobile = #{record.mobile,jdbcType=BIGINT},
            </if>
            <if test="record.nickName != null">
                nick_name = #{record.nickName,jdbcType=VARCHAR},
            </if>
            <if test="record.realName != null">
                real_name = #{record.realName,jdbcType=VARCHAR},
            </if>
            <if test="record.userSex != null">
                user_sex = #{record.userSex,jdbcType=TINYINT},
            </if>
            <if test="record.studentNo != null">
                student_no = #{record.studentNo,jdbcType=VARCHAR},
            </if>
            <if test="record.qq != null">
                qq = #{record.qq,jdbcType=VARCHAR},
            </if>
            <if test="record.valid != null">
                valid = #{record.valid,jdbcType=TINYINT},
            </if>
            <if test="record.isPresident != null">
                is_president = #{record.isPresident,jdbcType=TINYINT},
            </if>
            <if test="record.avatarUrl != null">
                avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user_info
        set user_id = #{record.userId,jdbcType=INTEGER},
        school_id = #{record.schoolId,jdbcType=INTEGER},
        school_name = #{record.schoolName,jdbcType=VARCHAR},
        mobile = #{record.mobile,jdbcType=BIGINT},
        nick_name = #{record.nickName,jdbcType=VARCHAR},
        real_name = #{record.realName,jdbcType=VARCHAR},
        user_sex = #{record.userSex,jdbcType=TINYINT},
        student_no = #{record.studentNo,jdbcType=VARCHAR},
        qq = #{record.qq,jdbcType=VARCHAR},
        valid = #{record.valid,jdbcType=TINYINT},
        is_president = #{record.isPresident,jdbcType=TINYINT},
        avatar_url = #{record.avatarUrl,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.chinaxiaopu.xiaopuMobi.model.UserInfo">
        update user_info
        <set>
            <if test="schoolId != null">
                school_id = #{schoolId,jdbcType=INTEGER},
            </if>
            <if test="schoolName != null">
                school_name = #{schoolName,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=BIGINT},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="userSex != null">
                user_sex = #{userSex,jdbcType=TINYINT},
            </if>
            <if test="studentNo != null">
                student_no = #{studentNo,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                qq = #{qq,jdbcType=VARCHAR},
            </if>
            <if test="valid != null">
                valid = #{valid,jdbcType=TINYINT},
            </if>
            <if test="isPresident != null">
                is_president = #{isPresident,jdbcType=TINYINT},
            </if>
            <if test="avatarUrl != null">
                avatar_url = #{avatarUrl,jdbcType=VARCHAR},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.chinaxiaopu.xiaopuMobi.model.UserInfo">
    update user_info
    set school_id = #{schoolId,jdbcType=INTEGER},
      school_name = #{schoolName,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=BIGINT},
      nick_name = #{nickName,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=TINYINT},
      student_no = #{studentNo,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      valid = #{valid,jdbcType=TINYINT},
      is_president = #{isPresident,jdbcType=TINYINT},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>


    <select id="selectAll" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT * FROM user_info where user_id !=0
  </select>
    <select id="selectUserRoleById" parameterType="java.lang.Integer"
            resultType="com.chinaxiaopu.xiaopuMobi.vo.authorization.UserRoleVo">
      SELECT
          ui.mobile mobile,
          ui.school_name schoolName,
          ui.school_id schoolId,
          ui.avatar_url avatarUrl,
          ui.user_id userId,
          ui.nick_name nickName,
          ui.real_name realName,
          ui.user_sex userSex,
          ui.student_no studentNo,
          ui.qq,
          ui.valid,
          ui.is_president isPresident,
          GROUP_CONCAT(r.role_key) roleKeys
      FROM
          user_info ui
      LEFT JOIN user_role ur ON  ui.user_id =ur.user_id
      LEFT JOIN roles r ON ur.role_id = r.id
      WHERE
       ui.user_id = #{userId,jdbcType=INTEGER}
      GROUP BY
          ui.user_id
  </select>

    <select id="selectUserRoleVoList" parameterType="com.chinaxiaopu.xiaopuMobi.dto.authorization.UserInfoSelectDto"
            resultType="com.chinaxiaopu.xiaopuMobi.vo.authorization.UserRoleVo">
        SELECT
        ui.mobile mobile,
        ui.school_name schoolName,
        ui.school_id schoolId,
        ui.avatar_url avatarUrl,
        ui.user_id userId,
        ui.nick_name nickName,
        ui.real_name realName,
        ui.user_sex userSex,
        ui.student_no studentNo,
        ui.qq,
        ui.valid,
        ui.is_president isPresident,
        GROUP_CONCAT(r.role_key) roleKeys
        FROM
        user_info ui
        LEFT JOIN user_role ur ON ui.user_id =ur.user_id
        LEFT JOIN roles r ON ur.role_id = r.id
        WHERE
        ui.user_id != 0
        <if test="roleId != null">
            and r.id= #{roleId,jdbcType=INTEGER}
        </if>
        <if test="schoolId != null">
            and ui.school_id = #{schoolId,jdbcType=INTEGER}
        </if>
        <if test="keyWord != null">
            and CONCAT(ui.user_id,ui.mobile,ui.real_name,ui.nick_name) like CONCAT('%','${keyWord}','%')
        </if>
        GROUP BY
        ui.user_id
    </select>

    <select id="selectNotInRoleByKeyWord" parameterType="com.chinaxiaopu.xiaopuMobi.dto.authorization.UserInfoSelectDto"
            resultType="com.chinaxiaopu.xiaopuMobi.model.UserInfo">
        select 	ui.mobile mobile,
        ui.school_name schoolName,
        ui.school_id schoolId,
        ui.avatar_url avatarUrl,
        ui.user_id userId,
        ui.nick_name nickName,
        ui.real_name realName,
        ui.user_sex userSex,
        ui.student_no studentNo,
        ui.qq,
        ui.valid,
        ui.is_president isPresident
        from user_info ui where ui.user_id not in
        (SELECT
        ui.user_id userId
        FROM
        roles r
        left join user_role ur on ur.role_id = r.id
        left join user_info ui on ui.user_id = ur.user_id
        where r.id =#{roleId,jdbcType=INTEGER})
        and ui.user_id !=0
        <if test="keyWord != null">
            and CONCAT(ui.user_id,ui.mobile,ui.real_name,ui.school_name) like CONCAT('%','${keyWord}','%')
        </if>
    </select>

    <select id="selectUserInfoByKeyWord" parameterType="com.chinaxiaopu.xiaopuMobi.dto.authorization.UserInfoSelectDto"
            resultType="com.chinaxiaopu.xiaopuMobi.vo.authorization.UserRoleVo">
        SELECT
        ui.mobile mobile,
        ui.school_name schoolName,
        ui.school_id schoolId,
        ui.avatar_url avatarUrl,
        ui.user_id userId,
        ui.nick_name nickName,
        ui.real_name realName,
        ui.user_sex userSex,
        ui.student_no studentNo,
        ui.qq,
        ui.valid,
        ui.is_president isPresident,
        GROUP_CONCAT(r.role_key) roleKeys
        FROM
        user_info ui
        LEFT JOIN user_role ur ON ui.user_id =ur.user_id
        LEFT JOIN roles r ON ur.role_id = r.id
        WHERE
        ui.user_id != 0
        <if test="keyWord != null">
            and CONCAT(ui.user_id,ui.mobile,ui.real_name,ui.school_name) like CONCAT('%','${keyWord}','%')
        </if>
        GROUP BY
        ui.user_id
    </select>

    <select id="selectUserInfoByRoleId" parameterType="com.chinaxiaopu.xiaopuMobi.model.UserInfo"
            resultMap="BaseResultMap">
        select ui.* from user_info ui left join user_role ur on ui.user_id=ur.user_id where ur.role_id=1
        <if test="realName!=null">
            AND real_name LIKE CONCAT('%','${realName}','%')
        </if>
    </select>

    <select id="selectUserInfoListByRoleId" parameterType="java.lang.Integer"
            resultType="com.chinaxiaopu.xiaopuMobi.model.UserInfo">
        select
        ui.mobile mobile,
        ui.school_name schoolName,
        ui.school_id schoolId,
        ui.avatar_url avatarUrl,
        ui.user_id userId,
        ui.nick_name nickName,
        ui.real_name realName,
        ui.user_sex userSex,
        ui.student_no studentNo,
        ui.qq,
        ui.valid,
        ui.is_president isPresident from user_info ui left join user_role ur on ui.user_id = ur.user_id
        left join roles r on r.id=ur.role_id where ui.user_id !=0 and r.id = #{roleId,jdbcType=INTEGER}
    </select>

    <select id="selectUserInfoById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT * FROM user_info WHERE user_id = #{userId}
  </select>

    <select id="getUserInfoByMobile" parameterType="java.lang.Long" resultMap="BaseResultMap">
    SELECT * FROM user_info WHERE mobile = #{mobile}
  </select>


    <resultMap id="BaseResultMap1" type="com.chinaxiaopu.xiaopuMobi.vo.partner.SchoolPartnerVo">
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="school_id" jdbcType="INTEGER" property="schoolId"/>
        <result column="school_name" jdbcType="VARCHAR" property="schoolName"/>
        <result column="mobile" jdbcType="BIGINT" property="mobile"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="student_no" jdbcType="VARCHAR" property="studentNo"/>
        <result column="qq" jdbcType="VARCHAR" property="qq"/>
        <result column="valid" jdbcType="TINYINT" property="valid"/>
        <result column="is_president" jdbcType="TINYINT" property="isPresident"/>
        <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl"/>
        <result column="invitation_code" jdbcType="VARCHAR" property="code"/>
        <result column="join_time" jdbcType="TIMESTAMP" property="joinTime"/>

    </resultMap>
    <select id="selectUserInfoByCode" parameterType="com.chinaxiaopu.xiaopuMobi.dto.partner.PartnerDetailsDto"
            resultMap="BaseResultMap1">
    select uic.invitation_code,ui.real_name,ui.student_no,ui.qq,ui.school_name,ui.mobile,u.join_time from user_invitation_code uic LEFT JOIN user_info ui on uic.user_id=ui.user_id LEFT JOIN users u on ui.user_id=u.id where uic.invitation_code=#{code}
  </select>
    <select id="selectUserInfoByPartner" parameterType="com.chinaxiaopu.xiaopuMobi.dto.partner.PartnerDetailsDto"
            resultMap="BaseResultMap1">
        SELECT ic.`code`,c.*,u.join_time from invitation_code ic
        LEFT JOIN user_invitation_code b on ic.`code` = b.invitation_code
        LEFT JOIN user_info c on b.user_id = c.user_id
        left join users u on u.id=c.user_id
        WHERE partner_id = #{partnerid}
        <if test="code!='' and code!=null">
            and ic.`code`=#{code}
        </if>
        <if test="realName!=null">
            and c.real_name like CONCAT('%','${realName}','%')
        </if>
        <if test="startTime != null and startTime != '' ">
            and u.join_time &gt; #{startTime}
        </if>
        <if test="endTime != null and endTime != ''">
            and u.join_time &lt; date_add(#{endTime}, interval 1 day)
        </if>
        <if test="schoolId!=null and schoolId !=''">
            and c.school_id=#{schoolId}
        </if>
    </select>


    <resultMap id="BaseResultMap2" type="com.chinaxiaopu.xiaopuMobi.vo.VrUserVo">
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="school_id" jdbcType="INTEGER" property="schoolId"/>
        <result column="school_name" jdbcType="VARCHAR" property="schoolName"/>
        <result column="mobile" jdbcType="BIGINT" property="mobile"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="user_sex" jdbcType="TINYINT" property="userSex"/>
        <result column="student_no" jdbcType="VARCHAR" property="studentNo"/>
        <result column="qq" jdbcType="VARCHAR" property="qq"/>
        <result column="valid" jdbcType="TINYINT" property="valid"/>
        <result column="is_president" jdbcType="TINYINT" property="isPresident"/>
        <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl"/>
        <result column="appointment_date" jdbcType="VARCHAR" property="appointmentDate"/>
        <result column="appointment_time" jdbcType="VARCHAR" property="appointmentTime"/>
        <result column="activity_cnt" jdbcType="INTEGER" property="activityCnt"/>
    </resultMap>
    <select id="selectVrList" parameterType="com.chinaxiaopu.xiaopuMobi.dto.VrDto" resultMap="BaseResultMap2">
        SELECT
        ui.user_id,
        ui.real_name,
        ui.mobile,
        ui.school_name,
        ui.student_no,
        ur.appointment_date,
        ur.appointment_time,
        ur.activity_cnt
        FROM
        user_vr_activitys ur
        LEFT JOIN user_info ui ON ur.user_id = ui.user_id
        where 1=1
        <if test="realName!=null">
            and ui.real_name like CONCAT('%','${realName}','%')
        </if>
        <if test="schoolId!=null and schoolId !=''">
            and ui.school_id=#{schoolId}
        </if>
    </select>
    <select id="selectAnchorInfo" parameterType="com.chinaxiaopu.xiaopuMobi.dto.audio.PersonnelDto"
            resultType="com.chinaxiaopu.xiaopuMobi.vo.audio.PersonnelVo">
        SELECT
        p.position_name AS positionName,
        ui.user_id AS userId,
        ui.nick_name AS nickName,
        ui.real_name AS realName,
        ui.mobile AS mobile,
        ui.school_name AS schoolName
        FROM
        anchor_position ap
        LEFT JOIN user_info ui ON ap.anchor_id = ui.user_id
        LEFT JOIN positions p ON ap.position_id = p.id
        where p.available=1
        <if test="realName!=null">
            and ui.real_name like CONCAT('%','${realName}','%')
        </if>
        <if test="schoolId!=null">
            and ui.school_id =#{schoolId}
        </if>
        <if test="positionId!=null">
            and ap.position_id =#{positionId}
        </if>
    </select>

</mapper>